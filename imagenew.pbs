#!/bin/bash --login
#
#PBS -N imagenew
#PBS -l place=excl
#PBS -A d167-s1770309
#PBS -l walltime=0:10:00
#PBS -l select=1:ncpus=36

cd $PBS_O_WORKDIR

#load compilers
module load mpt
module load intel-compilers-17

#log file for Cirrus monitoring
LOG_FILE=data/cirrus_log.txt

#run on 1 thread
export OMP_NUM_THREADS=1

#parses the arguments to the script
set -f
PROC_LIST=(${PROC_LIST//_/ })
RESOURCES_LIST=(${RESOURCES_LIST//_/ })

for MPISIZE in "${PROC_LIST[@]}"
do
	for INPUT_FILE in "${RESOURCES_LIST[@]}"
	do

		# MPIPROG=`basename $PBS_JOBNAME .pbs`
		# MPIPROG set but the arguments

		# Spread the processes as evenly as possible across the nodes
		CPN=36                                     # Cores Per Node (physical)
		NNODE=$( wc -l < $PBS_NODEFILE )           # nodes reserved
		PPN=$(( (MPISIZE + NNODE - 1) / NNODE ))   # Processes Per Node

		# Ensure we place a maximum of 36 processes per node to avoid hyperthreads
		if [ $PPN -gt $CPN ]
		then
		    NMIN=$(( (MPISIZE + CPN - 1) / CPN ))
		    echo "Error: for $MPISIZE processes you must select at least $NMIN nodes" >> $LOG_FILE
		    exit 1
		fi

		Ensure that number of MPI processes is a multiple of number of nodes
		if [ $MPISIZE -ne $(( NNODE * PPN )) ]
		then
		    echo "Error: NPROC=$NPROC must be a multiple of number of nodes=$NNODE" >> $LOG_FILE
		    exit 1
		fi

		echo '--------------------------------------------------------------------------------' >> $LOG_FILE

		echo 'Running' $MPIPROG 'on' $MPISIZE 'processes over' $NNODE 'node(s)' >> $LOG_FILE
		echo 'Issuing command: mpiexec_mpt -n' $MPISIZE '-ppn' $PPN ./$MPIPROG >> $LOG_FILE
		echo 'Started at' `date` >> $LOG_FILE
		echo '--------------------------------------------------------------------------------' >> $LOG_FILE

		(time mpiexec_mpt -n $MPISIZE -ppn $PPN ./$MPIPROG $INPUT_FILE) 2>&1

		echo '--------------------------------------------------------------------------------' >> $LOG_FILE
		echo 'Finished at' `date` >> $LOG_FILE

	done
done
